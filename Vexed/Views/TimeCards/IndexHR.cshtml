@using Vexed.Services;
@inject LanguageService language
@model IEnumerable<Shared.ViewModels.UserTimeCardsViewModel>

@{
    ViewData["Title"] = "Index";
    IDictionary<string, string> statusBadge = new Dictionary<string, string>()
    {
        { StatusManager.Submitted, "badge-outline-warning"},
        {StatusManager.SuperiorApproval, "badge-outline-info"},
        {StatusManager.HRApproval, "badge-outline-success"},
        {StatusManager.Cancelled, "badge-outline-danger"},
    };

}
<link rel="stylesheet" href="/vendor/datatables/css/jquery.dataTables.min.css" />
<link rel="stylesheet" href="/css/accordion-table.css" />


<div class="row page-titles mx-0">
    <div class="col-sm-6 p-md-0">
        <div class="welcome-text">
            <h4>Approve Time cards</h4>
            <span class="ml-1">All in one place</span>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <form>
                    <div class="table-responsive">
                        <table id="example" class="table table-responsive-sm">
                            <thead class="thead-primary">
                                <tr>
                                    <th>
                                        @language.GetKey("ProjectCode")
                                    </th>
                                    <th>
                                        @language.GetKey("TaskDetails")
                                    </th>
                                    <th>
                                        @language.GetKey("Location")
                                    </th>
                                    <th>
                                        @language.GetKey("StartDate")
                                    </th>
                                    <th>
                                        @language.GetKey("EndDate")
                                    </th>
                                    <th>
                                        @language.GetKey("Quantity")
                                    </th>
                                    <th>
                                        @language.GetKey("Status")
                                    </th>
                                    <th>
                                        @language.GetKey("Comments")
                                    </th>
                                    <th data-orderable="false"></th>
                                </tr>
                            </thead>
                            <tbody class="text-dark">
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TimeCard.ProjectCode)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TimeCard.TaskDetails)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TimeCard.Location)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TimeCard.StartDate)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TimeCard.EndDate)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TimeCard.Quantity)
                                        </td>
                                        <td>
                                            <span class="badge @statusBadge[item.TimeCard.Status] badge-rounded">@Html.DisplayFor(modelItem => item.TimeCard.Status)</span>
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TimeCard.Comments)
                                        </td>
                                        <td>
                                            <button class="btn btn-primary" type="submit" asp-action="IndexHR" asp-controller="TimeCards" asp-route-statusAction="@StatusManager.HRApproval" asp-route-id="@item.TimeCard.Id">@language.GetKey("Approve")</button> |
                                            <button class="btn btn-danger" type="submit" asp-action="IndexHR" asp-controller="TimeCards" asp-route-statusAction="@StatusManager.Cancelled" asp-route-id="@item.TimeCard.Id">@language.GetKey("Cancel")</button> |
                                        </td>
                                    </tr>                                   
                                }
                            </tbody>
                        </table>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
